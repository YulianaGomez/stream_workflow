import os
import glob
from shutil import move
#############################################
########### Cache Buffer simulator ##########
#############################################

def populate_cache(source, cache, cache_size):
    while True:
        # If there's enough room in the cache folder for one more cache file
        list_of_files = glob.glob(source + "/*")
        latest_file = max(list_of_files, key=os.path.getctime)
        # print latest_file
        size = os.path.getsize(latest_file)/1024/1024
        if size <= cache_size - get_size(cache):
            move(latest_file, cache)


# Get the total size of a folder in MB
def get_size(start_path):
    total_size = 0
    for dirpath, dirnames, filenames in os.walk(start_path):
        for f in filenames:
            try:
                fp = os.path.join(dirpath, f)
                total_size += os.path.getsize(fp)
            except OSError:
                pass
    return total_size/1024/1024


if __name__ == "__main__":
    # Simulating the data generated by the APS
    source = "./source"
    cache = "./cache"
    cache_size = 1024
    populate_cache(source, cache, cache_size)

